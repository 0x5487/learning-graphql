scalar Time
scalar Banned
scalar Int64

type Todo {
  id: ID!
  text: String!
  done: Boolean!
  count: Int!
  status: TodoStatus!
  user: User!
  createdAt: Time!
}

enum TodoStatus {
  created
  deleted
  edited
}

type User {
  id: ID!
  name: String!
}

input NewTodo {
  text: String!
  userId: String!
}

input FindTodoOptions {
  page: Int64!
  pageSize: Int!
  text: String!
  count: Int!
  done: Boolean
}


type Query {
  todos(opts: FindTodoOptions!): [Todo!]!
  getError: String!
  totalCount: Int!
}

type Mutation {
  createTodo(input: NewTodo!): Boolean!
}